<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WeMove_Mvvm.Views">

    <LinearGradientBrush x:Key="SpeciVerticalLinear" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF4F1B7A" Offset="0"/>
        <GradientStop Color="#FF21CCD4" Offset="1"/>
    </LinearGradientBrush>

    <Style x:Key="EmailTextBoxStyle" TargetType="{x:Type TextBox}" >
        <Setter Property="Height" Value="46"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="5 0 0 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid Height="{TemplateBinding Height}">
                        <Border x:Name="border" 
                                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Background="{TemplateBinding Background}"
                                                    SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" VerticalAlignment="Center"  HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <TextBlock Text="{TemplateBinding Tag}" FontSize="{TemplateBinding FontSize}"
                                               Margin="3 0 0 0" 
                                               Padding="{TemplateBinding Padding}"
                                               HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                               VerticalAlignment="Center" Opacity="0.5"
                                               Foreground="Gray">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text,RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="RememberCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource SpeciVerticalLinearBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="TextBlock.FontFamily" Value="Microsoft YaHei UI"/>
        <Setter Property="TextBlock.FontWeight" Value="Light"/>
        <Setter Property="TextBlock.FontSize" Value="20"/>
        <Setter Property="Margin" Value="0 20 20 20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Viewbox Width="{TemplateBinding TextBlock.FontSize}" Height="{TemplateBinding TextBlock.FontSize}">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource SpeciVerticalLinearBrush}" Margin="1" Opacity="0" Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource SpeciVerticalLinearBrush}" Margin="2" Opacity="0"/>
                                </Grid>
                            </Viewbox>
                        </Border>
                        <TextBlock Text="{TemplateBinding Content}" x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="IsChecked" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="contentPresenter" Property="Foreground" Value="Orange"/>
                            
                        </MultiTrigger>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource SecondLightBackground}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource SpeciVerticalLinear}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource SpeciVerticalLinear}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource SpeciVerticalLinear}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource SecondLightBackground}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource SpeciVerticalLinear}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource SpeciVerticalLinear}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource SpeciVerticalLinear}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource SecondLightBackground}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource SpeciVerticalLinear}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource SpeciVerticalLinear}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource SpeciVerticalLinear}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type Button}" x:Key="MinimButton">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Foreground" Value="#FF000000" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="ToolTip" Value="最小化"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="grid"
                          Background="{TemplateBinding Background}"
                          MinHeight="36"
                          MinWidth="36">
                        <Path x:Name="icon"
                              Width="15"
                              Height="15"
                              Fill="{TemplateBinding Foreground}"
                              Stretch="Uniform"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                                  RenderTransformOrigin="0.5 0.5"
                              Opacity="0.8">
                            <Path.Data>
                                <GeometryGroup FillRule="Nonzero">
                                    <RectangleGeometry Rect="0 0 15 1"/>
                                </GeometryGroup>
                            </Path.Data>
                            <Path.LayoutTransform>
                                <TransformGroup>
                                    <ScaleTransform x:Name="IconScale"/>
                                </TransformGroup>
                            </Path.LayoutTransform>
                            <Path.RenderTransform>
                                <TranslateTransform x:Name="IconTranslate" X="0" Y="1"/>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#FF000000" />
                            <Setter Property="Opacity" TargetName="icon" Value="1"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IconScale"
                                                         Storyboard.TargetProperty="ScaleX"
                                                         To="1.2"
                                                         Duration="0:0:0.15" />
                                        <DoubleAnimation Storyboard.TargetName="IconScale"
                                                         Storyboard.TargetProperty="ScaleY"
                                                         To="1.2"
                                                         Duration="0:0:0.15" />
                                        <DoubleAnimation Storyboard.TargetName="IconTranslate"
                                                         Storyboard.TargetProperty="Y" 
                                                         To="6"
                                                         Duration="0:0:0.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IconScale"
                                                         Storyboard.TargetProperty="ScaleX"
                                                         To="1"
                                                         Duration="0:0:0.15" />
                                        <DoubleAnimation Storyboard.TargetName="IconScale"
                                                         Storyboard.TargetProperty="ScaleY"
                                                         To="1"
                                                         Duration="0:0:0.15" />
                                        <DoubleAnimation Storyboard.TargetName="IconTranslate"
                                                         Storyboard.TargetProperty="Y"
                                                         To="1"
                                                         Duration="0:0:0.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource SpeciColorBlueBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#99000000" />
                            <Setter TargetName="icon" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="CloseButton">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <!--需要注意！！WindowChrome.IsHitTestVisibleInChrome 如果设置为false  则点不动 (不设置默认为false)-->
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Foreground" Value="#FF000000" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="ToolTip" Value="关闭"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid"
                          Background="{TemplateBinding Background}"
                          MinHeight="36"
                          MinWidth="36">
                        <!--RenderTransformOrigin 设置旋转中心点  0.5 0.5为图形中心-->
                        <Path x:Name="icon"
                              Width="15"
                              Height="15"
                              Fill="{TemplateBinding Foreground}"
                              Stretch="Uniform"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                                  RenderTransformOrigin="0.5 0.5"
                              Opacity="0.8">
                            <Path.Data>
                                <GeometryGroup FillRule="Nonzero">
                                    <RectangleGeometry Rect="0 7 15 1"/>
                                    <RectangleGeometry Rect="7 0 1 15"/>
                                </GeometryGroup>
                            </Path.Data>
                            <Path.LayoutTransform>
                                <TransformGroup>
                                    <ScaleTransform x:Name="IconScale"/>
                                    <RotateTransform x:Name="IconRotate" Angle="45"/>
                                </TransformGroup>
                            </Path.LayoutTransform>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#FF000000" />
                            <Setter Property="Opacity" TargetName="icon" Value="1"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IconScale"
                                                         Storyboard.TargetProperty="ScaleX"
                                                         To="1.2"
                                                         Duration="0:0:0.15" />
                                        <DoubleAnimation Storyboard.TargetName="IconScale"
                                                         Storyboard.TargetProperty="ScaleY"
                                                         To="1.2"
                                                         Duration="0:0:0.15" />
                                        <DoubleAnimation Storyboard.TargetName="IconRotate"
                                                         Storyboard.TargetProperty="Angle"
                                                         To="-45"
                                                         Duration="0:0:0.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IconScale"
                                                         Storyboard.TargetProperty="ScaleX"
                                                         To="1"
                                                         Duration="0:0:0.15" />
                                        <DoubleAnimation Storyboard.TargetName="IconScale"
                                                         Storyboard.TargetProperty="ScaleY"
                                                         To="1"
                                                         Duration="0:0:0.15" />
                                        <DoubleAnimation Storyboard.TargetName="IconRotate"
                                                         Storyboard.TargetProperty="Angle"
                                                         To="45"
                                                         Duration="0:0:0.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource SpeciColorBlueBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#99000000" />
                            <Setter TargetName="icon" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <SolidColorBrush x:Key="LightBackground" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="SecondLightBackground" Color="#FFF8F8F8"/>
    <SolidColorBrush x:Key="ThirdLightBackground" Color="#FFeeeeee"/>
    <SolidColorBrush x:Key="DarkForeground" Color="#FF000000"/>
    <SolidColorBrush x:Key="LightForeground" Color="#FFFFFFFF"/>

    <Color x:Key="SpeciBlueColor" >#FF053f4b</Color>
    <SolidColorBrush x:Key="SpeciColorBlueBrush" Color="{StaticResource SpeciBlueColor}"/>
    <Color x:Key="SpeciPurpleColor" >#FF290736</Color>
    <SolidColorBrush x:Key="SpeciColorPurpleBrush" Color="{StaticResource SpeciPurpleColor}"/>



    <Style TargetType="{x:Type local:MainWindow}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border Background="White" BorderBrush="{StaticResource SecondLightBackground}" BorderThickness="1">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="65"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <!--#region 功能区 -->
                            <Border Background="{StaticResource SecondLightBackground}" BorderBrush="{StaticResource ThirdLightBackground}" BorderThickness="0 0 0 1">
                                <DockPanel LastChildFill="False">
                                    <TextBlock Margin="32 0 0 0" VerticalAlignment="Center" DockPanel.Dock="Left" Text="We Move" FontSize="25" FontFamily="Microsoft YaHei UI"/>
                                    <StackPanel VerticalAlignment="Top" Orientation="Horizontal" DockPanel.Dock="Right">
                                        <Button Command="{Binding MinimCommand}" Style="{StaticResource MinimButton}"/>
                                        <Button Command="{Binding CloseCommand}" Style="{StaticResource CloseButton}"/>
                                    </StackPanel>
                                </DockPanel>
                            </Border>
                            <!--#endregion-->


                            <!--#region 客户区 -->
                            <Border Grid.Row="1">
                                <ContentPresenter Content="{TemplateBinding Content}"/>
                            </Border>
                            <!--#endregion-->
                        </Grid>


                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LoginButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource LightBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource SpeciColorBlueBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource LightBackground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border" Background="{StaticResource SpeciVerticalLinearBrush}">
                        <Grid>
                            <TextBlock Text="{TemplateBinding Content}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <TextBlock Visibility="Hidden" Name="SpinText" Text="🥟"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource SpeciVerticalLinear}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SpeciVerticalLinear}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource SpeciVerticalLinear}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SpeciVerticalLinear}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>





</ResourceDictionary>